<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.tanzuhao</groupId>
	<name>spring-boot-base-V1.3</name>
	<artifactId>spring-boot-base-V1.3</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<!-- WEB打包 -->
		<module>spring-boot-data</module>
		<module>spring-boot-util</module>
		<module>spring-boot-service</module>
		<module>spring-boot-web</module>
	</modules>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.1.3.RELEASE</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<commons.io.version>2.4</commons.io.version>
		<commons.fileupload.version>1.3.1</commons.fileupload.version>
		<commons.collections.version>3.2</commons.collections.version>
		<commons.beanutils.version>1.9.2</commons.beanutils.version>
		<guava.version>23.0</guava.version>
	</properties>

	<!-- 版本说明：这里 -->
	<dependencies>
		<!--支持全栈式Web开发，包括Tomcat和spring-webmvc。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter</artifactId>
		</dependency>

		<!--支持常规的测试依赖，包括JUnit、Hamcrest、Mockito以及spring-test模块。 -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- ******************************* 常用依赖库 start ********************************** -->
		<!-- 针对开发IO流功能的工具类库 -->
		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
			<version>${commons.io.version}</version>
		</dependency>
		<!-- 文件上传 -->
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>${commons.fileupload.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-io</groupId>
					<artifactId>commons-io</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 常用的集合操作，丰富的工具类 -->
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>${commons.collections.version}</version>
		</dependency>
		<!-- 操作javabean的工具包 -->
		<dependency>
			<groupId>commons-beanutils</groupId>
			<artifactId>commons-beanutils</artifactId>
			<version>${commons.beanutils.version}</version>
			<exclusions>
				<exclusion>
					<groupId>commons-collections</groupId>
					<artifactId>commons-collections</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- 包含一些通用的编码解码算法. 如：MD5、SHA1、Base64等 -->
		<dependency>
			<groupId>commons-codec</groupId>
			<artifactId>commons-codec</artifactId>
		</dependency>
		<!-- 包含丰富的工具类如 StringUtils -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
		</dependency>
		<!-- Guava工程包含了若干被Google的Java项目广泛依赖的核心库. 集合[collections] 、缓存[caching] 、原生类型支持[primitives 
			support] 、 并发库[concurrency libraries] 、通用注解[common annotations] 、字符串处理[string 
			processing] 、I/O 等等。 -->
		<dependency>
			<groupId>com.google.guava</groupId>
			<artifactId>guava</artifactId>
			<version>${guava.version}</version>
		</dependency>

		<!-- 引入java持久化包 -->
		<dependency>
			<groupId>javax.persistence</groupId>
			<artifactId>persistence-api</artifactId>
			<version>1.0</version>
		</dependency>

		<!-- 日志包 -->
		<dependency>
			<groupId>log4j</groupId>
			<artifactId>log4j</artifactId>
			<version>1.2.17</version>
		</dependency>
		<!-- ******************************* 常用依赖库 end ********************************** -->
	</dependencies>

	<!--配置项目生成的构件部署到Nexus私服上 -->
	<distributionManagement>
		<repository>
			<!--id的名字可以任意取，但是在setting文件中的属性<server>的ID与这里一致 -->
			<id>nexus-public</id>
			<!--指向仓库类型为host(宿主仓库）的储存类型为Release的仓库 -->
			<url>http://localhost:6081/repository/nexus-public/</url>
		</repository>
	</distributionManagement>

	<!-- 打包插件 -->
	<build>
		<plugins>
			<!--打包跳过单元测 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<skip>true</skip>
				</configuration>
			</plugin>
			<!-- maven-deploy-plugin:为了用来将artifact部署到远程仓库中 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-deploy-plugin</artifactId>
				<configuration>
					<uniqueVersion>false</uniqueVersion>
				</configuration>
			</plugin>
			<!--maven-eclipse-plugin:eclipse插件 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
			</plugin>
			<!--maven-compiler-plugin:指定项目源码的jdk版本，编译后的jdk版本，以及编码(maven的默认编译使用的jdk版本很低) -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<failOnError>true</failOnError>
					<verbose>true</verbose>
					<fork>true</fork>
					<compilerArgument>-nowarn</compilerArgument>
					<source>${java.version}</source>
					<target>${java.version}</target>
					<encoding>${project.build.sourceEncoding}</encoding>
				</configuration>
			</plugin>
			<!--maven-source-plugin:主要是用来打包源代码的 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>








